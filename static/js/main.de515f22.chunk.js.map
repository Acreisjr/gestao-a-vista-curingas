{"version":3,"sources":["Theme.js","components/Squad/Cadencia.js","components/Squad/GembaCheck.js","components/Squad/Membros.js","components/Squad/CheckExecucao.js","components/Squad/PlanoDeAcao.js","components/Squad/Squad.js","repos/SquadRepo.js","repos/CuringasRepo.js","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","main","secondary","error","typography","fontFamily","useNextVariants","obterDataComFarol","data","dias","moment","diff","backgroundColor","Typography","style","width","fontSize","fontWeight","color","isValid","format","Cadencia","props","Grid","container","align","item","xs","squad","DataCheckArquitetural","DataCheckExecucao","DataRetroSquad","GembaCheck","scores","Object","entries","filter","entry","includes","categories","map","replace","options","chart","height","type","background","colors","fill","opacity","theme","mode","xaxis","series","name","corStatus","meeting","classes","Escalado","lastMeeting","Membros","spacing","membros","membro","corStatusOneOnOne","crafters","crafter","find","email","login","avatar","Avatar","border","src","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","key","nome","CheckExecucao","labels","show","PlanoDeAcao","Squad","Container","padding","alignItems","mock","Tribo","Cliente","Andon","Estoque","ScoreGembaGeral","ScoreGembaGroomingPlanning","ScoreGembaTamanhoEstorias","ScoreGembaFerramentaControle","ScoreGembaDaily","ScoreGembaGestaoAVista","ScoreGembaWIP","ScoreGembaDtiFlow","ScoreGembaTesteUnitario","ScoreGembaSonar","ScoreGembaCulturaImplantacao","ScoreCEDaily","ScoreCEGrooming","ScoreCEReuniaoEstoria","ScoreCERoteiroTeste","ScoreCEValidacaoDupla","ScoreCERevisaoCodigo","ScoreCEWIP","ScoreCEChecklistEstoria","ScoreCERiscoEstoria","ScoreCESonarQube","ScoreCETesteAutomatizado","ScoreCEGestaoAVista","ScoreCEOKR","ScoreCELeadTime","Cover","plano","Promise","resolve","reject","tribe","leader","isLate","array","Crafter","Data","Lider","pages","App","state","index","page","play","handleChange","e","value","setState","handleClick","CuringasRepo","listarCuringas","then","SquadRepo","listarSquads","squads","this","timer","setInterval","newIndex","length","MuiThemeProvider","Theme","AppBar","position","Tabs","onChange","flexGrow","Tab","wrapped","label","variant","right","top","Paper","className","pageView","Fab","onClick","fab","React","Component","withStyles","bottom","borderRadius","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de515f22.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#504d94'\r\n    },\r\n    secondary: {\r\n      main: '#1c68b1'\r\n    },\r\n    error: {\r\n      main: '#e72372'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Poppins\"',\r\n    useNextVariants: true\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nexport const Cadencia = props => {\r\n  return (\r\n    <Grid container align=\"center\">\r\n      <Grid item xs={4}>\r\n        <Typography style={{ fontSize: '1.6rem', fontWeight: 300, color: '#ffffff' }}>\r\n          Check Arquitetural\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography style={{ fontSize: '1.6rem', fontWeight: 300, color: '#ffffff' }}>\r\n          Check de Execução\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography style={{ fontSize: '1.6rem', fontWeight: 300, color: '#ffffff' }}>\r\n          Retro do Squad\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataCheckArquitetural)}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataCheckExecucao)}\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        {obterDataComFarol(props.squad.DataRetroSquad)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst obterDataComFarol = data => {\r\n  const dias = moment().diff(data, 'days');\r\n  let backgroundColor = '#454545';\r\n  if (dias > 14) {\r\n    backgroundColor = '#e95d6a';\r\n  } else if (dias === 14) {\r\n    backgroundColor = '#f6b26b';\r\n  } else {\r\n    backgroundColor = '#57bb8a';\r\n  }\r\n  return (\r\n    <Typography\r\n      style={{\r\n        width: '64%',\r\n        fontSize: '3rem',\r\n        fontWeight: 900,\r\n        backgroundColor: backgroundColor,\r\n        color: '#ffffff'\r\n      }}\r\n    >\r\n      {data.isValid() ? data.format('DD/MM') : 'NOVO'}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Cadencia;\r\n","import React from 'react';\r\nimport ReactApexCharts from 'react-apexcharts';\r\n\r\nexport const GembaCheck = props => {\r\n  const scores = Object.entries(props.squad).filter(entry => {\r\n    return entry[0].includes('ScoreGemba');\r\n  });\r\n  const categories = scores.map(entry => {\r\n    return entry[0].replace('ScoreGemba', '');\r\n  });\r\n  const data = scores.map(entry => {\r\n    return entry[1];\r\n  });\r\n  return (\r\n    <ReactApexCharts\r\n      options={{\r\n        chart: {\r\n          height: 20,\r\n          type: 'radar',\r\n          background: 'rgba(41, 40, 61, 0)'\r\n        },\r\n        colors: ['#57bb8a'],\r\n        fill: {\r\n          colors: ['#57bb8a'],\r\n          opacity: 0.9\r\n        },\r\n        theme: {\r\n          mode: 'dark',\r\n          palette: 'palette8'\r\n        },\r\n        xaxis: {\r\n          categories: categories\r\n        }\r\n      }}\r\n      series={[\r\n        {\r\n          name: '',\r\n          data: data\r\n        }\r\n      ]}\r\n      type=\"radar\"\r\n      height={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GembaCheck;\r\n","import React from 'react';\r\nimport { Grid, Badge, Avatar, Typography } from '@material-ui/core';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailableRounded';\r\nimport moment from 'moment';\r\n\r\nexport const Membros = props => {\r\n  return (\r\n    <Grid container spacing={2} align=\"center\">\r\n      {props.membros.map(membro => {\r\n        let corStatusOneOnOne = '#1c68b1';\r\n\r\n        if (props.crafters) {\r\n          const crafter = props.crafters.find(crafter => crafter.email.includes(membro.login));\r\n          corStatusOneOnOne = corStatus(crafter.meeting);\r\n        }\r\n\r\n        let avatar = (\r\n          <Avatar\r\n            style={{\r\n              border: `8px solid ${corStatusOneOnOne}`,\r\n              width: '8vw',\r\n              height: '8vw',\r\n              backgroundColor: corStatusOneOnOne\r\n            }}\r\n            src={`./images/fotos/${membro.login}.JPG`}\r\n          />\r\n        );\r\n        if (membro.login === 'tiago.turibio') {\r\n          avatar = (\r\n            <Badge\r\n              overlap=\"circle\"\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right'\r\n              }}\r\n              badgeContent={\r\n                <Avatar style={{ backgroundColor: corStatusOneOnOne, height: '3vw', width: '3vw' }}>\r\n                  <EventAvailableIcon style={{ color: '#ffffff', height: '80%', width: '80%' }} />\r\n                </Avatar>\r\n              }\r\n            >\r\n              {avatar}\r\n            </Badge>\r\n          );\r\n        }\r\n        return (\r\n          <Grid item xs={4} key={membro.login}>\r\n            {avatar}\r\n            <Typography style={{ fontSize: '1.6rem', fontWeight: 600, color: '#ffffff' }}>\r\n              {membro.nome}\r\n            </Typography>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst corStatus = meeting => {\r\n  if (!meeting) {\r\n    return this.props.classes.Escalado;\r\n  }\r\n  const dias = moment().diff(moment(meeting.lastMeeting), 'days');\r\n  if (dias < 21) {\r\n    return '#57bb8a';\r\n  } else if (dias < 30) {\r\n    return '#f6b26b';\r\n  } else if (dias < 45) {\r\n    return '#e95d6a';\r\n  } else {\r\n    return '#505050';\r\n  }\r\n};\r\n\r\nexport default Membros;\r\n","import React from 'react';\r\nimport ReactApexCharts from 'react-apexcharts';\r\n\r\nexport const CheckExecucao = props => {\r\n  const scores = Object.entries(props.squad).filter(entry => {\r\n    return entry[0].includes('ScoreCE');\r\n  });\r\n  const categories = scores.map(entry => {\r\n    return entry[0].replace('ScoreCE', '');\r\n  });\r\n  const data = scores.map(entry => {\r\n    return entry[1];\r\n  });\r\n  return (\r\n    <ReactApexCharts\r\n      options={{\r\n        chart: {\r\n          height: '20%',\r\n          type: 'radar',\r\n          background: 'rgba(41, 40, 61, 0)'\r\n        },\r\n        colors: ['#57bb8a'],\r\n        fill: {\r\n          colors: ['#57bb8a'],\r\n          opacity: 0.9\r\n        },\r\n        theme: {\r\n          mode: 'dark',\r\n          palette: 'palette8'\r\n        },\r\n        xaxis: {\r\n          categories: categories,\r\n          labels: {\r\n            show: true\r\n          }\r\n        }\r\n      }}\r\n      series={[\r\n        {\r\n          name: '',\r\n          data: data\r\n        }\r\n      ]}\r\n      type=\"radar\"\r\n      height={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CheckExecucao;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const PlanoDeAcao = props => {\r\n  return (\r\n    <Typography style={{ fontSize: '1.2rem', fontWeight: 300, color: '#ffffff' }}>\r\n      {props.squad.PlanoDeAcao}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default PlanoDeAcao;\r\n","import React from 'react';\r\nimport { Typography, Grid, Container } from '@material-ui/core';\r\nimport Cadencia from './Cadencia';\r\nimport GembaCheck from './GembaCheck';\r\nimport Membros from './Membros';\r\nimport CheckExecucao from './CheckExecucao';\r\nimport PlanoDeAcao from './PlanoDeAcao';\r\n\r\nexport const Squad = props => {\r\n  return (\r\n    <Container\r\n    // maxWidth=\"xl\"\r\n    // disableGutters={true}\r\n    // style={{\r\n    //   height: '100%',\r\n    //   backgroundImage: `url(${props.squad.Cover})`,\r\n    //   backgroundSize: 'cover'\r\n    // }}\r\n    >\r\n      <Container\r\n      // maxWidth=\"xl\"\r\n      // style={{\r\n      //   height: '100%',\r\n      //   backgroundColor: '#29283ddd'\r\n      // }}\r\n      >\r\n        <Typography style={{ padding: 16, fontSize: '2.2rem', fontWeight: 900, color: '#ffffff' }}>\r\n          {props.squad.Squad}\r\n        </Typography>\r\n        <Grid container spacing={4} alignItems=\"flex-start\">\r\n          <Grid item container xs={8} spacing={4} alignItems=\"flex-start\">\r\n            <Grid item xs={12}>\r\n              <Cadencia squad={props.squad} />\r\n            </Grid>\r\n            <Grid item xs={4} align=\"center\">\r\n              <Typography style={{ fontSize: '2rem', fontWeight: 900, color: '#ffffff' }}>\r\n                Gemba Check\r\n              </Typography>\r\n              <GembaCheck squad={props.squad} />\r\n            </Grid>\r\n            <Grid item xs={4} align=\"center\">\r\n              <Typography style={{ fontSize: '2rem', fontWeight: 900, color: '#ffffff' }}>\r\n                Check de Execução\r\n              </Typography>\r\n              <CheckExecucao squad={props.squad} />\r\n            </Grid>\r\n            <Grid item xs={4} align=\"center\">\r\n              <Typography style={{ fontSize: '2rem', fontWeight: 900, color: '#ffffff' }}>\r\n                Plano de Ação\r\n              </Typography>\r\n              <PlanoDeAcao squad={props.squad} />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Membros membros={props.squad.Membros} crafters={props.crafters} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Squad;\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nclass SquadRepo {\r\n  async listarSquads() {\r\n    const mock = [\r\n      {\r\n        Squad: 'Curingas - Canastra',\r\n        Tribo: 'Curingas',\r\n        Cliente: 'PRODAP',\r\n        DataCheckArquitetural: moment('2020-01-17T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataCheckExecucao: moment('2020-01-17T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataRetroSquad: moment('2020-01-23T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        Andon: '',\r\n        Estoque: 'CONCRETO',\r\n        GembaCheck: 'NÃO SE APLICA',\r\n        Cadencia: '2',\r\n        ScoreGembaGeral: null,\r\n        ScoreGembaGroomingPlanning: null,\r\n        ScoreGembaTamanhoEstorias: null,\r\n        ScoreGembaFerramentaControle: null,\r\n        ScoreGembaDaily: null,\r\n        ScoreGembaGestaoAVista: null,\r\n        ScoreGembaWIP: null,\r\n        ScoreGembaDtiFlow: null,\r\n        ScoreGembaTesteUnitario: null,\r\n        ScoreGembaSonar: null,\r\n        ScoreGembaCulturaImplantacao: null,\r\n        Membros: [\r\n          { login: 'tatiane.coutinho', nome: 'Tati' },\r\n          { login: 'raisny.alves', nome: 'Raisny' },\r\n          { login: 'daniel.mesquita', nome: 'Daniel' },\r\n          { login: 'murilo.costa', nome: 'Cumpadi' },\r\n          { login: 'thalisson.correia', nome: 'Mike' }\r\n        ],\r\n        ScoreCEDaily: null,\r\n        ScoreCEGrooming: null,\r\n        ScoreCEReuniaoEstoria: null,\r\n        ScoreCERoteiroTeste: null,\r\n        ScoreCEValidacaoDupla: null,\r\n        ScoreCERevisaoCodigo: null,\r\n        ScoreCEWIP: null,\r\n        ScoreCEChecklistEstoria: null,\r\n        ScoreCERiscoEstoria: null,\r\n        ScoreCESonarQube: null,\r\n        ScoreCETesteAutomatizado: null,\r\n        ScoreCEGestaoAVista: null,\r\n        ScoreCEOKR: null,\r\n        ScoreCELeadTime: null,\r\n        PlanoDeAcao: ' ',\r\n        Cover: ''\r\n      },\r\n      {\r\n        Squad: 'Curingas - Pôquer',\r\n        Tribo: 'Curingas',\r\n        Cliente: 'PRODAP',\r\n        DataCheckArquitetural: moment('2020-01-30T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataCheckExecucao: moment('2020-01-30T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataRetroSquad: moment('2020-01-30T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        Andon: '',\r\n        Estoque: 'CONCRETO',\r\n        GembaCheck: 'ALTO',\r\n        Cadencia: '2',\r\n        ScoreGembaGeral: 3,\r\n        ScoreGembaGroomingPlanning: 3,\r\n        ScoreGembaTamanhoEstorias: 3,\r\n        ScoreGembaFerramentaControle: 3,\r\n        ScoreGembaDaily: 3,\r\n        ScoreGembaGestaoAVista: 3,\r\n        ScoreGembaWIP: 3,\r\n        ScoreGembaDtiFlow: 3,\r\n        ScoreGembaTesteUnitario: 3,\r\n        ScoreGembaSonar: 3,\r\n        ScoreGembaCulturaImplantacao: 3,\r\n        Membros: [\r\n          { login: 'brayan.silva', nome: 'Alanzinho' },\r\n          { login: 'vitor.demetrio', nome: 'Demétrio' },\r\n          { login: 'andre.silva', nome: 'André' },\r\n          { login: 'matheus.lemos', nome: 'Matheusão' },\r\n          { login: 'nicholas.cristofaro', nome: 'Nicholas' },\r\n          { login: 'raisny.alves', nome: 'Raisny' },\r\n          { login: 'daniel.mesquita', nome: 'Daniel' },\r\n          { login: 'murilo.costa', nome: 'Cumpadi' },\r\n          { login: 'thalisson.correia', nome: 'Mike' }\r\n        ],\r\n        ScoreCEDaily: 4,\r\n        ScoreCEGrooming: 4,\r\n        ScoreCEReuniaoEstoria: 4,\r\n        ScoreCERoteiroTeste: 4,\r\n        ScoreCEValidacaoDupla: 5,\r\n        ScoreCERevisaoCodigo: 4,\r\n        ScoreCEWIP: 5,\r\n        ScoreCEChecklistEstoria: 1,\r\n        ScoreCERiscoEstoria: 3,\r\n        ScoreCESonarQube: 4,\r\n        ScoreCETesteAutomatizado: 4,\r\n        ScoreCEGestaoAVista: 5,\r\n        ScoreCEOKR: 4,\r\n        ScoreCELeadTime: 4,\r\n        PlanoDeAcao: '',\r\n        Cover: ''\r\n      },\r\n      {\r\n        Squad: 'Curingas - SmartMill',\r\n        Tribo: 'Curingas',\r\n        Cliente: 'PRODAP',\r\n        DataCheckArquitetural: moment('2020-01-20T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataCheckExecucao: moment('2020-01-10T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataRetroSquad: moment('2020-01-20T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        Andon: '',\r\n        Estoque: 'CONCRETO',\r\n        GembaCheck: 'SEM MEDIÇÃO',\r\n        Cadencia: '0',\r\n        ScoreGembaGeral: 0,\r\n        ScoreGembaGroomingPlanning: 0,\r\n        ScoreGembaTamanhoEstorias: 0,\r\n        ScoreGembaFerramentaControle: 0,\r\n        ScoreGembaDaily: 0,\r\n        ScoreGembaGestaoAVista: 0,\r\n        ScoreGembaWIP: 0,\r\n        ScoreGembaDtiFlow: 0,\r\n        ScoreGembaTesteUnitario: 0,\r\n        ScoreGembaSonar: 0,\r\n        ScoreGembaCulturaImplantacao: 0,\r\n        Membros: [\r\n          { login: 'tiago.carvalho', nome: 'Tiago' },\r\n          { login: 'thalisson.correia', nome: 'Mike' }\r\n        ],\r\n        ScoreCEDaily: null,\r\n        ScoreCEGrooming: null,\r\n        ScoreCEReuniaoEstoria: null,\r\n        ScoreCERoteiroTeste: null,\r\n        ScoreCEValidacaoDupla: null,\r\n        ScoreCERevisaoCodigo: null,\r\n        ScoreCEWIP: null,\r\n        ScoreCEChecklistEstoria: null,\r\n        ScoreCERiscoEstoria: null,\r\n        ScoreCESonarQube: null,\r\n        ScoreCETesteAutomatizado: null,\r\n        ScoreCEGestaoAVista: null,\r\n        ScoreCEOKR: null,\r\n        ScoreCELeadTime: null,\r\n        PlanoDeAcao: '',\r\n        Cover: ''\r\n      },\r\n      {\r\n        Squad: 'Curingas - Truco',\r\n        Tribo: 'Curingas',\r\n        Cliente: 'PRODAP',\r\n        DataCheckArquitetural: moment('2020-01-28T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataCheckExecucao: moment('2020-01-28T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        DataRetroSquad: moment('2020-01-28T03:00:00.000Z', 'YYYY-MM-DD'),\r\n        Andon: '',\r\n        Estoque: 'CONCRETO',\r\n        GembaCheck: 'ALTO',\r\n        Cadencia: '2',\r\n        ScoreGembaGeral: 3,\r\n        ScoreGembaGroomingPlanning: 3,\r\n        ScoreGembaTamanhoEstorias: 3,\r\n        ScoreGembaFerramentaControle: 3,\r\n        ScoreGembaDaily: 3,\r\n        ScoreGembaGestaoAVista: 3,\r\n        ScoreGembaWIP: 3,\r\n        ScoreGembaDtiFlow: 3,\r\n        ScoreGembaTesteUnitario: 3,\r\n        ScoreGembaSonar: 3,\r\n        ScoreGembaCulturaImplantacao: 3,\r\n        Membros: [\r\n          { login: 'douglas.lima', nome: 'Dôga' },\r\n          { login: 'tiago.turibio', nome: 'Tuturo', plano: true },\r\n          { login: 'ramon.prata', nome: 'Ramon' },\r\n          { login: 'marco.santo', nome: 'Marco' },\r\n          { login: 'leticia.michelin', nome: 'Letícia' },\r\n          { login: 'victor.magalhaes', nome: 'Vitão' },\r\n          { login: 'raisny.alves', nome: 'Raisny' },\r\n          { login: 'daniel.mesquita', nome: 'Daniel' },\r\n          { login: 'murilo.costa', nome: 'Cumpadi' },\r\n          { login: 'thalisson.correia', nome: 'Mike' }\r\n        ],\r\n        ScoreCEDaily: 4,\r\n        ScoreCEGrooming: 3,\r\n        ScoreCEReuniaoEstoria: 4,\r\n        ScoreCERoteiroTeste: 3,\r\n        ScoreCEValidacaoDupla: 5,\r\n        ScoreCERevisaoCodigo: 4,\r\n        ScoreCEWIP: 5,\r\n        ScoreCEChecklistEstoria: 2,\r\n        ScoreCERiscoEstoria: 5,\r\n        ScoreCESonarQube: 5,\r\n        ScoreCETesteAutomatizado: 4,\r\n        ScoreCEGestaoAVista: 4,\r\n        ScoreCEOKR: 5,\r\n        ScoreCELeadTime: 3,\r\n        PlanoDeAcao: 'Levantar cenários para testes de integração',\r\n        Cover: ''\r\n      }\r\n    ];\r\n    return new Promise(function(resolve, reject) {\r\n      resolve(mock);\r\n    });\r\n    return axios\r\n      .get(\r\n        `https://docs.google.com/spreadsheets/d/e/2PACX-1vSpC_x6FOQi7QOG4-gFFZzgIp_BCHZEKLHy8PoJpA9twqOAsRVMUerK9BEhglaI92K58qjW4DOFFkMC/pub?gid=766563780&single=true&output=tsv`\r\n      )\r\n      .then(response => {\r\n        var lines = response.data.split('\\r\\n');\r\n\r\n        var result = [];\r\n        var headers = lines[0].split('\\t');\r\n\r\n        for (var i = 1; i < lines.length; i++) {\r\n          var obj = {};\r\n          var currentline = lines[i].split('\\t');\r\n\r\n          for (var j = 0; j < headers.length; j++) {\r\n            if (headers[j].includes('Data')) {\r\n              obj[headers[j]] = moment(currentline[j], 'DD/MM/YYYY');\r\n            } else if (headers[j].includes('Score')) {\r\n              obj[headers[j]] = Number(currentline[j].replace(',', '.'));\r\n            } else if (headers[j].includes('Membros')) {\r\n              obj[headers[j]] = JSON.parse(currentline[j]);\r\n            } else {\r\n              obj[headers[j]] = currentline[j];\r\n            }\r\n          }\r\n\r\n          result.push(obj);\r\n        }\r\n\r\n        return result;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default new SquadRepo();\r\n","import axios from 'axios';\r\nimport * as _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nclass CuringasRepo {\r\n  async listarCuringas() {\r\n    const mock = [\r\n      {\r\n        name: 'Douglas Souza Lima',\r\n        tribe: 'Curingas',\r\n        email: 'douglas.lima@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Felipe da Silveira Silva',\r\n          lastMeeting: '2020-01-15T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Thalisson Scarabelli dos Santos Correia',\r\n        tribe: 'Curingas',\r\n        email: 'thalisson.correia@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Marcelo Szuster',\r\n          lastMeeting: '2019-09-20T12:00:00.000Z',\r\n          isLate: true\r\n        }\r\n      },\r\n      {\r\n        name: 'Leonardo Gonçalves',\r\n        tribe: 'Curingas',\r\n        email: 'leonardo.goncalves@dtidigital.com.br'\r\n      },\r\n      {\r\n        name: 'Raisny Fernandes Alves',\r\n        tribe: 'Curingas',\r\n        email: 'raisny.alves@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-29T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Tiago Henrique Freitas Turibio',\r\n        tribe: 'Curingas',\r\n        email: 'tiago.turibio@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-09T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Tiago Figueiredo de Carvalho',\r\n        tribe: 'Curingas',\r\n        email: 'tiago.carvalho@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Thalisson Scarabelli dos Santos Correia',\r\n          lastMeeting: '2020-01-10T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Brayan Allanderson Gomes Silva',\r\n        tribe: 'Curingas',\r\n        email: 'brayan.silva@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-07T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Ramon Pereira Prata',\r\n        tribe: 'Curingas',\r\n        email: 'ramon.prata@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-10T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'André Silva Mauricio da Rocha',\r\n        tribe: 'Curingas',\r\n        email: 'andre.silva@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Brayan  Allanderson Gomes Silva',\r\n          lastMeeting: '2019-11-22T12:00:00.000Z',\r\n          isLate: true\r\n        }\r\n      },\r\n      {\r\n        name: 'Ana Paula Bartels de Oliveira',\r\n        tribe: 'Curingas',\r\n        email: 'anapaula.bartels@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Leandra Carla Sousa',\r\n          lastMeeting: '2019-07-08T12:00:00.000Z',\r\n          isLate: true\r\n        }\r\n      },\r\n      {\r\n        name: 'Tatiane Coutinho Alves',\r\n        tribe: 'Curingas',\r\n        email: 'tatiane.coutinho@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Thalisson Scarabelli dos Santos Correia',\r\n          lastMeeting: '2020-01-15T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Marco Antônio do Espírito Santo',\r\n        tribe: 'Curingas',\r\n        email: 'marco.santo@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Thalisson Scarabelli dos Santos Correia',\r\n          lastMeeting: '2020-01-09T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Murilo Costa Gonçalves',\r\n        tribe: 'Curingas',\r\n        email: 'murilo.costa@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-13T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Nicholas Pereira Cristofaro',\r\n        tribe: 'Curingas',\r\n        email: 'nicholas.cristofaro@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Brayan  Allanderson Gomes Silva',\r\n          lastMeeting: '2020-01-09T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Vítor Demétrio Alves Pereira',\r\n        tribe: 'Curingas',\r\n        email: 'vitor.demetrio@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-10T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Letícia Bougleux Michelin Assunção',\r\n        tribe: 'Curingas',\r\n        email: 'leticia.michelin@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-17T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Matheus Teixeira Lemos',\r\n        tribe: 'Curingas',\r\n        email: 'matheus.lemos@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Brayan  Allanderson Gomes Silva',\r\n          lastMeeting: '2020-01-09T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Daniel Mesquita Alves Pereira',\r\n        tribe: 'Curingas',\r\n        email: 'daniel.mesquita@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Brayan  Allanderson Gomes Silva',\r\n          lastMeeting: '2020-01-13T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Victor Hugo Faria Dias Magalhães',\r\n        tribe: 'Curingas',\r\n        email: 'victor.magalhaes@dtidigital.com.br',\r\n        meeting: {\r\n          leader: 'Douglas Souza Lima',\r\n          lastMeeting: '2020-01-15T12:00:00.000Z',\r\n          isLate: false\r\n        }\r\n      },\r\n      {\r\n        name: 'Diego Henrique Silva',\r\n        tribe: 'Curingas',\r\n        email: 'diego.henrique@dtidigital.com.br'\r\n      },\r\n      {\r\n        name: 'Esdras Tivoli Morais Amora',\r\n        tribe: 'Curingas',\r\n        email: 'esdras.amora@dtidigital.com.br'\r\n      },\r\n      {\r\n        name: 'Matheus Becatini de Castro',\r\n        tribe: 'Curingas',\r\n        email: 'matheus.becatini@dtidigital.com.br'\r\n      }\r\n    ];\r\n    return new Promise(function(resolve, reject) {\r\n      resolve(mock);\r\n    });\r\n    return axios\r\n      .get(`https://one-on-ones-dti.herokuapp.com/api/data_tribe/Curingas`)\r\n      .then(response => {\r\n        return _.filter(\r\n          response.data.crafters,\r\n          crafter => crafter.email !== 'leonardo.goncalves@dtidigital.com.br'\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  parseCuringa(array) {\r\n    return {\r\n      Crafter: array[0],\r\n      Data: moment(array[1], 'DD/MM/YYYY'),\r\n      Lider: array[2]\r\n    };\r\n  }\r\n}\r\n\r\nexport default new CuringasRepo();\r\n","import React from 'react';\r\nimport {\r\n  MuiThemeProvider,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Fab,\r\n  withStyles,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Theme from './Theme';\r\nimport PauseButton from '@material-ui/icons/Pause';\r\nimport PlayButton from '@material-ui/icons/PlayArrow';\r\nimport Squad from './components/Squad/Squad';\r\nimport SquadRepo from './repos/SquadRepo';\r\nimport CuringasRepo from './repos/CuringasRepo';\r\n\r\nconst pages = [0, 1, 2, 3];\r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pageView: {\r\n    height: `calc(100vh - 48px)`,\r\n    backgroundColor: '#29283d',\r\n    borderRadius: 0\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    index: 0,\r\n    page: 0,\r\n    play: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    CuringasRepo.listarCuringas().then(crafters => {\r\n      this.setState({\r\n        crafters: crafters\r\n      });\r\n    });\r\n    SquadRepo.listarSquads().then(squads => {\r\n      this.setState({\r\n        squads: squads\r\n      });\r\n    });\r\n    this.timer = setInterval(() => {\r\n      if (this.state.play) {\r\n        const newIndex = (this.state.index + 1) % pages.length;\r\n        this.setState({\r\n          index: newIndex,\r\n          page: pages[newIndex]\r\n        });\r\n      }\r\n    }, 30 * 1000);\r\n  }\r\n\r\n  handleChange = (e, value) => {\r\n    this.setState({ page: value });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ play: !this.state.play });\r\n  };\r\n\r\n  render() {\r\n    const { page, squads, crafters } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <MuiThemeProvider theme={Theme}>\r\n        <AppBar position=\"static\">\r\n          <Tabs value={page} onChange={this.handleChange} style={{ flexGrow: 1 }}>\r\n            {squads &&\r\n              squads.map(squad => {\r\n                return <Tab wrapped key={squad.Squad} label={squad.Squad} />;\r\n              })}\r\n          </Tabs>\r\n          <Typography\r\n            variant=\"overline\"\r\n            style={{ position: 'absolute', right: '16px', top: '24px' }}\r\n          >\r\n            2.0.9\r\n          </Typography>\r\n        </AppBar>\r\n\r\n        {squads && (\r\n          <Paper className={classes.pageView}>\r\n            <Squad squad={squads[page]} crafters={crafters}></Squad>\r\n          </Paper>\r\n        )}\r\n\r\n        <Fab onClick={this.handleClick} className={classes.fab} color=\"secondary\">\r\n          {this.state.play ? (\r\n            <PauseButton style={{ color: '#ffffff' }} />\r\n          ) : (\r\n            <PlayButton style={{ color: '#ffffff' }} />\r\n          )}\r\n        </Fab>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}